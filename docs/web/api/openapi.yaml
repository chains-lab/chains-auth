openapi: 3.1.1
info:
  description: SSO REST API for Cifra app
  title: Cifra SSO REST API
  version: 0.0.1
servers:
- url: /
paths:
  /chains/auth/v1/own:
    get:
      description: Endpoint to get user
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
          description: User successfully get
        "400":
          $ref: '#/components/responses/InvalidParameter'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/Internal'
      summary: Get user
      tags:
      - User
  /re-news/chains/auth/v1/own/refresh:
    post:
      description: Endpoint to refresh an expired access token using a valid refresh
        token.
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TokensPair'
          description: Access token successfully refreshed.
        "400":
          $ref: '#/components/responses/InvalidParameter'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "409":
          $ref: '#/components/responses/Conflict'
        "500":
          $ref: '#/components/responses/Internal'
      summary: Refresh Access Token
      tags:
      - Sessions
  /re-news/chains/auth/v1/own/login:
    post:
      description: Endpoint to login use google user
      responses:
        "302":
          description: Redirect to Google callback endpoint
          headers:
            Location:
              description: URL for redirection
              explode: false
              schema:
                example: /re-news/chains/auth/v1/own/callback
                type: string
              style: simple
        "500":
          $ref: '#/components/responses/Internal'
      tags:
      - Login
  /re-news/chains/auth/v1/own/callback:
    post:
      description: Endpoint to login use google user
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TokensPair'
          description: User successfully login
        "400":
          $ref: '#/components/responses/InvalidParameter'
        "500":
          $ref: '#/components/responses/Internal'
      tags:
      - Login
  /re-news/chains/auth/v1/own/logout:
    post:
      description: Endpoint to logout user
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TokensPair'
          description: User successfully logout
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      tags:
      - Login
  /re-news/chains/auth/v1/own/sessions:
    delete:
      description: Endpoint to terminate user's sessions
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SessionsCollection'
          description: successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/Internal'
      summary: Terminate user's sessions
      tags:
      - Sessions
    get:
      description: Endpoint to get user's sessions
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SessionsCollection'
          description: Successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/Internal'
      summary: Get user's sessions
      tags:
      - Sessions
  /re-news/chains/auth/v1/own/sessions/{session_id}:
    delete:
      description: Endpoint to terminate user's session
      parameters:
      - explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SessionsCollection'
          description: successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/Internal'
      summary: Terminate user's session
      tags:
      - Sessions
    get:
      description: Endpoint to get user's session
      parameters:
      - explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Session'
          description: User sessions successfully get
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/Internal'
      summary: Get user's session
      tags:
      - Sessions
    parameters:
    - explode: false
      in: path
      name: session_id
      required: true
      schema:
        type: string
      style: simple
  /re-news/chains/auth/v1/admin/{user_id}:
    get:
      description: Endpoint to get user
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
          description: User successfully get
        "400":
          $ref: '#/components/responses/InvalidParameter'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/Internal'
      summary: admin get user
      tags:
      - Admin
    parameters:
    - explode: false
      in: path
      name: user_id
      required: true
      schema:
        type: string
      style: simple
  /re-news/chains/auth/v1/admin/{user_id}/{role}:
    parameters:
    - explode: false
      in: path
      name: user_id
      required: true
      schema:
        type: string
      style: simple
    - explode: false
      in: path
      name: role
      required: true
      schema:
        type: string
      style: simple
    post:
      description: Endpoint to update user
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
          description: User successfully updated
        "400":
          $ref: '#/components/responses/InvalidParameter'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/Internal'
      summary: admin role update
      tags:
      - Admin
  /re-news/chains/auth/v1/admin/{user_id}/sessions:
    delete:
      description: Endpoint to delete user if you admin
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User successfully logout
        "400":
          $ref: '#/components/responses/InvalidParameter'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/Internal'
      summary: admin delete user
      tags:
      - Admin
    get:
      description: Endpoint to get user if you admin
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SessionsCollection'
          description: User sessions successfully get
        "400":
          $ref: '#/components/responses/InvalidParameter'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/Internal'
      summary: admin get sessions
      tags:
      - Admin
    parameters:
    - explode: false
      in: path
      name: user_id
      required: true
      schema:
        type: string
      style: simple
  /re-news/chains/auth/v1/admin/{user_id}/sessions/{session_id}:
    get:
      description: Endpoint to get user if you admin
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Session'
          description: User sessions successfully get
        "400":
          $ref: '#/components/responses/InvalidParameter'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/Internal'
      summary: admin get session
      tags:
      - Admin
    parameters:
    - explode: false
      in: path
      name: user_id
      required: true
      schema:
        type: string
      style: simple
    - explode: false
      in: path
      name: session_id
      required: true
      schema:
        type: string
      style: simple
components:
  responses:
    InvalidParameter:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: One of the parameters is invalid. Refer to the response body for
        details.
    Unauthorized:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: You must provide a valid authorization params.
    NotFound:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: Requested resource does not exist.
    Forbidden:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: Forbidden
    Internal:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: Internal server error
    Conflict:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: Conflict
    TooManyRequests:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: Too many requests
    UnsupportedMediaType:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: Unsupported Media Type
    InvalidPointer:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: invalid pointer. Refer to the response body for details.
    InvalidQuery:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/Errors'
      description: invalid query. Refer to the response body for details.
  schemas:
    TokensPair:
      properties:
        data:
          $ref: '#/components/schemas/TokensPair_data'
      required:
      - data
    RefreshToken:
      properties:
        data:
          $ref: '#/components/schemas/RefreshToken_data'
      required:
      - data
    AccessToken:
      properties:
        data:
          $ref: '#/components/schemas/AccessToken_data'
      required:
      - data
    Session:
      properties:
        data:
          $ref: '#/components/schemas/SessionData'
      required:
      - data
    SessionData:
      properties:
        id:
          description: session id
          format: uuid
          type: string
        type:
          enum:
          - user_session
          type: string
        attributes:
          $ref: '#/components/schemas/SessionAttributes'
      required:
      - attributes
      - id
      - type
    SessionAttributes:
      properties:
        user_id:
          description: user id
          format: uuid
          type: string
        client:
          description: client name and version
          type: string
        ip:
          description: IP address
          type: string
        created_at:
          description: session creation date
          format: date-time
          type: string
        last_used:
          description: last used date
          format: date-time
          type: string
      required:
      - client
      - created_at
      - ip
      - last_used
      - user_id
    SessionsCollection:
      properties:
        data:
          $ref: '#/components/schemas/SessionsCollection_data'
      required:
      - data
    User:
      properties:
        data:
          $ref: '#/components/schemas/User_data'
      required:
      - data
    Errors:
      properties:
        errors:
          description: Non empty array of errors occurred during request processing
          items:
            $ref: '#/components/schemas/Errors_errors_inner'
          type: array
      required:
      - errors
    TokensPair_data_attributes:
      properties:
        access_token:
          description: Access Token
          type: string
        refresh_token:
          description: Refresh Token
          type: string
      required:
      - access_token
      - refresh_token
    TokensPair_data:
      properties:
        type:
          enum:
          - tokens_pair
          type: string
        attributes:
          $ref: '#/components/schemas/TokensPair_data_attributes'
      required:
      - attributes
      - type
    RefreshToken_data_attributes:
      properties:
        refresh_token:
          description: The refresh token to generate a new access token.
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
          type: string
      required:
      - refresh_token
    RefreshToken_data:
      properties:
        type:
          enum:
          - refresh_token
          type: string
        attributes:
          $ref: '#/components/schemas/RefreshToken_data_attributes'
      required:
      - attributes
      - type
    AccessToken_data_attributes:
      properties:
        refresh_token:
          description: The access token to generate a new access token.
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
          type: string
      required:
      - access_token
    AccessToken_data:
      properties:
        type:
          enum:
          - access_token
          type: string
        attributes:
          $ref: '#/components/schemas/AccessToken_data_attributes'
      required:
      - attributes
      - type
    SessionsCollection_data_attributes:
      properties:
        sessions:
          items:
            $ref: '#/components/schemas/SessionData'
          type: array
      required:
      - sessions
    SessionsCollection_data:
      properties:
        type:
          enum:
          - user_sessions
          type: string
        attributes:
          $ref: '#/components/schemas/SessionsCollection_data_attributes'
      required:
      - attributes
      - type
    User_data_attributes:
      properties:
        email:
          description: Email
          type: string
        role:
          description: Role
          type: string
        subscription:
          description: Subscription
          type: string
        created_at:
          description: Created At
          format: date-time
          type: string
        updated_at:
          description: Updated At
          format: date-time
          type: string
      required:
      - created_at
      - email
      - role
      - subscription
      - updated_at
    User_data:
      properties:
        id:
          description: User ID
          type: string
        type:
          enum:
          - user
          type: string
        attributes:
          $ref: '#/components/schemas/User_data_attributes'
      required:
      - attributes
      - id
      - type
    Errors_errors_inner_meta:
      properties:
        error_id:
          description: "Error ID is a unique identifier for the error, used for debugging\
            \ and tracing"
          example: 0987654321fedcba
          type: string
        request_id:
          description: "Request ID is a unique identifier for the request, used for\
            \ debugging and tracing"
          example: 1234567890abcdef
          type: string
        parameter:
          description: "Parameter is the name of the request parameter that caused\
            \ the error, if applicable"
          example: email
          type: string
        pointer:
          description: "Pointer is a JSON Pointer that identifies the part of the\
            \ request document that caused the error, if applicable"
          example: /data/attributes/email
          type: string
        timestamp:
          description: "Timestamp is the time when the error occurred, in ISO 8601\
            \ format"
          example: 2023-10-01T12:34:56Z
          format: date-time
          type: string
      required:
      - error_id
      - request_id
      - timestamp
    Errors_errors_inner:
      properties:
        status:
          description: Status is the HTTP status code applicable to this problem
          enum:
          - 400
          - 401
          - 403
          - 404
          - 405
          - 408
          - 409
          - 415
          - 429
          - 500
          example: 400
          type: integer
        title:
          description: "Title is a short, human-readable summary of the problem"
          example: Bad Request
          type: string
        code:
          description: "Code is an application-specific error code, expressed as a\
            \ string"
          example: invalid_request
          type: string
        detail:
          description: Detail is a human-readable explanation specific to this occurrence
            of the problem
          example: Request body was expected
          type: string
        meta:
          $ref: '#/components/schemas/Errors_errors_inner_meta'
      required:
      - code
      - detail
      - meta
      - status
      - title
