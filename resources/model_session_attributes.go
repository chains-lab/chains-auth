/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the SessionAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionAttributes{}

// SessionAttributes struct for SessionAttributes
type SessionAttributes struct {
	// user id
	AccountId string `json:"account_id"`
	// client name and version
	Client string `json:"client"`
	// IP address
	Ip string `json:"ip"`
	// session creation date
	CreatedAt time.Time `json:"created_at"`
	// last used date
	LastUsed time.Time `json:"last_used"`
}

type _SessionAttributes SessionAttributes

// NewSessionAttributes instantiates a new SessionAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionAttributes(accountId string, client string, ip string, createdAt time.Time, lastUsed time.Time) *SessionAttributes {
	this := SessionAttributes{}
	this.AccountId = accountId
	this.Client = client
	this.Ip = ip
	this.CreatedAt = createdAt
	this.LastUsed = lastUsed
	return &this
}

// NewSessionAttributesWithDefaults instantiates a new SessionAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionAttributesWithDefaults() *SessionAttributes {
	this := SessionAttributes{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *SessionAttributes) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *SessionAttributes) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *SessionAttributes) SetAccountId(v string) {
	o.AccountId = v
}

// GetClient returns the Client field value
func (o *SessionAttributes) GetClient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Client
}

// GetClientOk returns a tuple with the Client field value
// and a boolean to check if the value has been set.
func (o *SessionAttributes) GetClientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Client, true
}

// SetClient sets field value
func (o *SessionAttributes) SetClient(v string) {
	o.Client = v
}

// GetIp returns the Ip field value
func (o *SessionAttributes) GetIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value
// and a boolean to check if the value has been set.
func (o *SessionAttributes) GetIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ip, true
}

// SetIp sets field value
func (o *SessionAttributes) SetIp(v string) {
	o.Ip = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SessionAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SessionAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SessionAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetLastUsed returns the LastUsed field value
func (o *SessionAttributes) GetLastUsed() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastUsed
}

// GetLastUsedOk returns a tuple with the LastUsed field value
// and a boolean to check if the value has been set.
func (o *SessionAttributes) GetLastUsedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUsed, true
}

// SetLastUsed sets field value
func (o *SessionAttributes) SetLastUsed(v time.Time) {
	o.LastUsed = v
}

func (o SessionAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["client"] = o.Client
	toSerialize["ip"] = o.Ip
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["last_used"] = o.LastUsed
	return toSerialize, nil
}

func (o *SessionAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"client",
		"ip",
		"created_at",
		"last_used",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSessionAttributes := _SessionAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSessionAttributes)

	if err != nil {
		return err
	}

	*o = SessionAttributes(varSessionAttributes)

	return err
}

type NullableSessionAttributes struct {
	value *SessionAttributes
	isSet bool
}

func (v NullableSessionAttributes) Get() *SessionAttributes {
	return v.value
}

func (v *NullableSessionAttributes) Set(val *SessionAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionAttributes(val *SessionAttributes) *NullableSessionAttributes {
	return &NullableSessionAttributes{value: val, isSet: true}
}

func (v NullableSessionAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


