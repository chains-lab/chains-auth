/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AccountDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountDataAttributes{}

// AccountDataAttributes struct for AccountDataAttributes
type AccountDataAttributes struct {
	// Email
	Email string `json:"email"`
	// Role
	Role string `json:"role"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Updated At
	UpdatedAt time.Time `json:"updated_at"`
}

type _AccountDataAttributes AccountDataAttributes

// NewAccountDataAttributes instantiates a new AccountDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountDataAttributes(email string, role string, createdAt time.Time, updatedAt time.Time) *AccountDataAttributes {
	this := AccountDataAttributes{}
	this.Email = email
	this.Role = role
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewAccountDataAttributesWithDefaults instantiates a new AccountDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountDataAttributesWithDefaults() *AccountDataAttributes {
	this := AccountDataAttributes{}
	return &this
}

// GetEmail returns the Email field value
func (o *AccountDataAttributes) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *AccountDataAttributes) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *AccountDataAttributes) SetEmail(v string) {
	o.Email = v
}

// GetRole returns the Role field value
func (o *AccountDataAttributes) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *AccountDataAttributes) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *AccountDataAttributes) SetRole(v string) {
	o.Role = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AccountDataAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AccountDataAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AccountDataAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *AccountDataAttributes) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *AccountDataAttributes) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *AccountDataAttributes) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o AccountDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["role"] = o.Role
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *AccountDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"role",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountDataAttributes := _AccountDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountDataAttributes)

	if err != nil {
		return err
	}

	*o = AccountDataAttributes(varAccountDataAttributes)

	return err
}

type NullableAccountDataAttributes struct {
	value *AccountDataAttributes
	isSet bool
}

func (v NullableAccountDataAttributes) Get() *AccountDataAttributes {
	return v.value
}

func (v *NullableAccountDataAttributes) Set(val *AccountDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountDataAttributes(val *AccountDataAttributes) *NullableAccountDataAttributes {
	return &NullableAccountDataAttributes{value: val, isSet: true}
}

func (v NullableAccountDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


