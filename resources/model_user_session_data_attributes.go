/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the UserSessionDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSessionDataAttributes{}

// UserSessionDataAttributes struct for UserSessionDataAttributes
type UserSessionDataAttributes struct {
	// client name and version
	Client string `json:"client"`
	// IP address
	IpFirst string `json:"Ip_first"`
	// IP address
	IpLast string `json:"Ip_last"`
	// last used date
	LastUsed time.Time `json:"last_used"`
	// session creation date
	CreatedAt time.Time `json:"created_at"`
}

type _UserSessionDataAttributes UserSessionDataAttributes

// NewUserSessionDataAttributes instantiates a new UserSessionDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSessionDataAttributes(client string, ipFirst string, ipLast string, lastUsed time.Time, createdAt time.Time) *UserSessionDataAttributes {
	this := UserSessionDataAttributes{}
	this.Client = client
	this.IpFirst = ipFirst
	this.IpLast = ipLast
	this.LastUsed = lastUsed
	this.CreatedAt = createdAt
	return &this
}

// NewUserSessionDataAttributesWithDefaults instantiates a new UserSessionDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSessionDataAttributesWithDefaults() *UserSessionDataAttributes {
	this := UserSessionDataAttributes{}
	return &this
}

// GetClient returns the Client field value
func (o *UserSessionDataAttributes) GetClient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Client
}

// GetClientOk returns a tuple with the Client field value
// and a boolean to check if the value has been set.
func (o *UserSessionDataAttributes) GetClientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Client, true
}

// SetClient sets field value
func (o *UserSessionDataAttributes) SetClient(v string) {
	o.Client = v
}

// GetIpFirst returns the IpFirst field value
func (o *UserSessionDataAttributes) GetIpFirst() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpFirst
}

// GetIpFirstOk returns a tuple with the IpFirst field value
// and a boolean to check if the value has been set.
func (o *UserSessionDataAttributes) GetIpFirstOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpFirst, true
}

// SetIpFirst sets field value
func (o *UserSessionDataAttributes) SetIpFirst(v string) {
	o.IpFirst = v
}

// GetIpLast returns the IpLast field value
func (o *UserSessionDataAttributes) GetIpLast() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpLast
}

// GetIpLastOk returns a tuple with the IpLast field value
// and a boolean to check if the value has been set.
func (o *UserSessionDataAttributes) GetIpLastOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpLast, true
}

// SetIpLast sets field value
func (o *UserSessionDataAttributes) SetIpLast(v string) {
	o.IpLast = v
}

// GetLastUsed returns the LastUsed field value
func (o *UserSessionDataAttributes) GetLastUsed() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastUsed
}

// GetLastUsedOk returns a tuple with the LastUsed field value
// and a boolean to check if the value has been set.
func (o *UserSessionDataAttributes) GetLastUsedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUsed, true
}

// SetLastUsed sets field value
func (o *UserSessionDataAttributes) SetLastUsed(v time.Time) {
	o.LastUsed = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *UserSessionDataAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *UserSessionDataAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *UserSessionDataAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o UserSessionDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSessionDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["client"] = o.Client
	toSerialize["Ip_first"] = o.IpFirst
	toSerialize["Ip_last"] = o.IpLast
	toSerialize["last_used"] = o.LastUsed
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *UserSessionDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"client",
		"Ip_first",
		"Ip_last",
		"last_used",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserSessionDataAttributes := _UserSessionDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserSessionDataAttributes)

	if err != nil {
		return err
	}

	*o = UserSessionDataAttributes(varUserSessionDataAttributes)

	return err
}

type NullableUserSessionDataAttributes struct {
	value *UserSessionDataAttributes
	isSet bool
}

func (v NullableUserSessionDataAttributes) Get() *UserSessionDataAttributes {
	return v.value
}

func (v *NullableUserSessionDataAttributes) Set(val *UserSessionDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSessionDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSessionDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSessionDataAttributes(val *UserSessionDataAttributes) *NullableUserSessionDataAttributes {
	return &NullableUserSessionDataAttributes{value: val, isSet: true}
}

func (v NullableUserSessionDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSessionDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


